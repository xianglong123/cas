apiVersion: batch/v1beta1
# <string>指定api资源版本,格式group/version
kind: CronJob
# <string>指定资源类别
metadata:
  name: cronjob-example
  # <Object>指定元数据,内嵌字段
  namespace: test
  # <string>指定名称空间,默认为default
  labels:
  # <map[string]string>指定标签格式为k:v,可以多个,每行一个
    app: mycronjob
spec:
# <Object>指定期望状态
  schedule: "*/2 * * * *"
  # <string> -required- cron格式作业调度运行时间点
  concurrencyPolicy: Allow
  # <string> 并发执行策略
  # Allow 代表允许
  # Forbid 代表禁止
  # Replace 代表替换,用于前一次作业运行尚未完成时是否以及如何运行后一次的作业
  failedJobsHistoryLimit: 1
  # <integer> 为失败的任务执行保留的历史记录,默认为1
  successfulJobsHistoryLimit: 3
  # <integer> 为成功的任务执行保留历史记录数,默认为3
  startingDeadlineSeconds: 20
  # <integer> 因各种原因缺乏执行作业的时间点所导致的启动作业错误超时时间,会被记录入错误历史记录
  suspend: false
  # <boolean> 是否挂起后续的任务执行,默认false,对运行中的作业不会产生影响
  jobTemplate: 
  # <Object> -required- job模版控制器用于为cronjob控制器生成job对象
    metadata:
    # <Object>指定元数据,内嵌字段
      labels:
      # <map[string]string>指定标签格式为k:v,可以多个,每行一个
        app: mycronjob-jobs  
    sepc:
    # <Object>定义模版的spec,基本与pod资源相同
      completions: 5
      # <integer> 总任务数,即一个job里面要运行多少个任务
      parallelism: 2
      # <integer> 并行度属性,即每次并行进行多少个任务
      activeDeadlineSeconds: 200
      # <integer> 用于为其指定最大活动时间长度,超出此时间的将被终止
      backoffLimit: 5
      # <integer> 作业标记为失败状态之前的重试次数，默认6
      # 例如配置失败次重试次数为5，且超出100s仍未运行完成，那么就被终止
        template:
        # <Object> -required-定义job模版
          spec:
          # <Object>定义模版的spec,基本与pod资源相同
            containers:
            # <[]Object> -required-指定容器对象资源,可以设置多个每个-name配置段设置一个
            - name: myjob
            # <string>指定容器名称
              image: alpine
              # <string>指定镜像资源
              command: ["/bin/sh",  "-c", "sleep 30"]
              # <[]string> 执行命令返回成功则表示容器执行成功,否则返回执行失败
            restartPolicy: Never
            # 执行失败时的重启策略
            # Never表示在pod出现故障时创建新的pod，且故障pod不会消失。
            # Always表示失败直接重启,默认
            # OnFailure表示在pod出现故障时其内部重启容器，而不是创建pod